@model  Speedbird.Models.PaymentViewModel

@{

    ViewBag.Title = "Finance Report";
}

<div class="card border rounded DropShadow">
    <div class="position-absolute text-center rounded DropShadow" id="EAcardTitle">
        <span class="h5">Search</span>
    </div>
    <div class="card-body">
        @Html.Hidden("#All")
        @Html.Hidden("#Pending")
        @Html.Hidden("#Paid")

        <div class="row d-print-none">
            <table>
                <tr style="text-align:center">
                    @if (ViewBag.Mode == (int)Speedbird.PayToEnum.Driver)
                    {
                        <td>&nbsp;Driver Name:</td>
                        @Html.Hidden("DriverID")
                        <td><input placeholder="Driver Name" type="text" id="DriverID" name="DriverName" data-autocomplete-idholder="#DriverID" data-autodriver-url='@Url.Action("AutoCompleteDriver")' class="form-control" /></td>
                    }
                    @if (ViewBag.Mode == (int)Speedbird.PayToEnum.Supplier)
                    {
                        @Html.Hidden("SupplierID")
                        <td>&nbsp;Supplier Name:</td>
                        <td><input placeholder="Supplier Name" type="text" id="SupplierName" name="SupplierName" data-autocomplete-idholder="#SupplierID" data-autosupplier-url='@Url.Action("AutoCompleteSupplier")' class="form-control" /></td>
                    }
                    @if (ViewBag.Mode == (int)Speedbird.PayToEnum.Agent)
                    {
                        <td>&nbsp;Agent Name:</td>
                        @Html.Hidden("AgentId")
                        <td><input placeholder="Agent Name" type="text" id="ContactName" name="ContactName" data-autocomplete-idholder="#AgentId" data-autoagent-url='@Url.Action("AutoCompleteAgent")' class="form-control" /></td>
                    }
                    <td>&nbsp;From Date:</td>
                    <td> @Html.TextBox("FromDate", ViewBag.CurrentFilter as string, new { @class = "form-control eadate", @type = "text" })</td>
                    <td>&nbsp;To Date:</td>
                    <td> @Html.TextBox("ToDate", ViewBag.CurrentFilter as string, new { @class = "form-control eadate", @type = "text" })</td>
                </tr>
                <tr>
                    <td>&nbsp;All: &nbsp;<input type="radio" id="All" name="radioGroup" value="1" checked="checked"></td>                    
                    <td>&nbsp;</td>
                                        
                    <td>&nbsp;Paid: &nbsp;<input type="radio" id="Paid" name="radioGroup" value="2" /></td>                    
                    <td>&nbsp;</td>
                    
                    <td>&nbsp;Pending: &nbsp;<input type="radio" id="Pending" name="radioGroup" value="3" /></td>                    
                    <td>&nbsp;</td>
                    
                    <td><input type="submit" value="Search" id="search" class="btn btn-primary" /></td>
                </tr>
            </table>

        </div>

    </div>
</div>



<div class="card border rounded DropShadow">
    <div class="card-body">
        <div class="row d-block mx-auto">

            @using (Html.BeginForm("Index", "FinanceInfo", FormMethod.Post, new { mode = ViewBag.Mode }))
            {
                <div id="financeListPart"></div>
                if (Model?.PaymentID > 0)
                {
                    @Html.HiddenFor(model => model.PaymentID)
                    @Html.HiddenFor(model => model.TDate)
                    @Html.HiddenFor(model => model.LeftBkPayVm)
                    @Html.HiddenFor(model => model.RightBkPayVm)
                    @Html.HiddenFor(model => model.AgentId)
                    @Html.HiddenFor(model => model.SupplierID)
                    @Html.HiddenFor(model => model.DriverID)
                }
                @Html.Hidden("mode", (int?)ViewBag.Mode)
                @Html.Hidden("Amount")
                @*@Html.Hidden("gtotal", (decimal?)ViewBag.Total)*@
                <div class="form-row">
                    <div class="input-group  mb-3">
                        <div class="input-group-prepend"><span class="input-group-text">Note</span></div>
                        @Html.TextArea("Note", null, htmlAttributes: new { @class = " form-control" })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="form-row">
                    <div class="input-group col mb-3">
                        <div class="input-group-prepend"><span class="input-group-text">Payment Type</span></div>
                        @Html.DropDownListFor(model => model.Type, null, htmlAttributes: new { @type = "text", @class = " form-control" })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div id="placeholderEditDiv"></div>
                @*Dynamic Form-rows based on Selected Payment Type*@

                <div class="input-group col mb-3 fa-pull-right">
                    <button type="submit" class="btn btn-primary " name="SaveReceipt" id="SaveReceipt">Save</button>
                </div>
            }
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
        $('#placeholderEditDiv').load('@Url.Action("FetchRcptPartial", "FinanceInfo")', { Type: $('#Type').val() });

        //Then on change of the dropDown load the dynamic fields based on the selected  type
        $('#Type').on('change', function () {
            var Type = $(this).val();


            //Load the Dynamic Fields of the Form based on the selected  Type
            $('#placeholderEditDiv').load('@Url.Action("FetchRcptPartial", "FinanceInfo")', { Type: $('#Type').val()});
    });

</script>

<script>
    $(function () {
        $('#search').click(function () {
            LoadView();
        });

        $("#All").val(true);//Set by default

        $("#All").click(function () {
            if ($(this).prop("checked")) {
                $("#All").val(true);
                $("#Pending").val(false);
                $("#Paid").val(false);
            }
            else {
                $("#All").val(false);
            }
        });


        $("#Paid").click(function () {
            if ($(this).prop("checked"))  {
                $("#Paid").val(true);
                $("#All").val(false);
                $("#Pending").val(false);
            }
            else {
                $("#Paid").val(false);
            }
        });

        $("#Pending").click(function () {
            if ($(this).prop("checked"))  {
                $("#Pending").val(true);
                $("#Paid").val(false);
                $("#All").val(false);
            }
            else {
                $("#Pending").val(false);
            }
        });

    });

    function LoadView() {
        $('#financeListPart').load('@Url.Action("_FinanceInfo", "FinanceInfo")', { DriverID: $("#DriverID").val(), SupplierID: $("#SupplierID").val(), AgentId: $("#AgentId").val(),  FromDate: $("#FromDate").val(), ToDate: $("#ToDate").val(), All: $("#All").val(), Paid: $("#Paid").val(), Pending: $("#Pending").val(), mode: @ViewBag.Mode });
    }

    $(function () {
        $('*[data-autodriver-url]')
            .each(function () {
                $(this).autocomplete({
                    source: $(this).data("autodriver-url"),
                    minLenght: 3,
                    delay: 500,
                    select: function (event, ui) {
                        $($(this).data("autocomplete-idholder")).val(ui.item.id);
                    }
                });
            });
    });

    $(function () {
        $('*[data-autosupplier-url]')
            .each(function () {
                $(this).autocomplete({
                    source: $(this).data("autosupplier-url"),
                    minLenght: 3,
                    delay: 500,
                    select: function (event, ui) {
                        $($(this).data("autocomplete-idholder")).val(ui.item.id);
                    }
                });
            });
    });

    $(function () {
        $('*[data-autoagent-url]')
            .each(function () {
                $(this).autocomplete({
                    source: $(this).data("autoagent-url"),
                    minLenght: 3,
                    delay: 500,
                    select: function (event, ui) {
                        $($(this).data("autocomplete-idholder")).val(ui.item.id);
                    }
                });
            });
    });


</script>


