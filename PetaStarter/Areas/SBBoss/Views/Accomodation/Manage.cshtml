@model Speedbird.Accomodation

@{
    ViewBag.Title = "Manage Accomodation";
}
<style>

    #map {
        height: 350px;
        width: 80%;
    }

</style>
<div class="card border rounded DropShadow">
    <div class="position-absolute text-center rounded DropShadow" id="EAcardTitle">
        <span class="h3">@ViewBag.Title</span>
        <a href="@Url.Action("Index","Accomodation")"><i class="fas fa-undo-alt fa-inverse h3 float-right DropShadow"></i></a>
    </div>
    <div class="card-body">
        <h5>&nbsp;</h5>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (Model?.AccomodationID > 0)
        {
        @Html.HiddenFor(model => model.AccomodationID)        
        <div class="row">
            <div class="col-md-1">&nbsp;</div>
            <div class="col-md-offset-1 col-md-2">
                <a class="btn btn-success" href="~/SBBoss/Accomodation/FacManage/@Model.AccomodationID">Facility</a>
            </div>
            <div class=" col-md-2">
                <a class="btn btn-success" href="~/SBBoss/Accomodation/Picture/@Model.AccomodationID">Images</a>
            </div>
            <div class=" col-md-2">
                <a class="btn btn-success" href="~/SBBoss/Accomodation/Price/@Model.AccomodationID">Price</a>
            </div>
        </div>
        <br />
}

            <div class="form-group">
                @Html.LabelFor(model => model.AccomName, "Accomodation Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccomName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccomName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.GeoTreeID, "Location", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">                    
                    <select id="GeoTreeID" name="GeoTreeID" style="width:280px;" data-AllowMultiple="false" class="GeoSelect">
                        @foreach(var o in ViewBag.GeoId)
                        {
                            <option value="@o.Value">@o.Text</option>
                        }
                    </select>                    
                    @Html.ValidationMessageFor(model => model.GeoTreeID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, 3, 43, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Click to set Location</label>
                <div class="col-md-10">
                    <div id="map" width="80%"></div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.lat, "Latitude", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lat, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lat, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.longt, "Longitude", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.longt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.longt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
        }


    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    var markersArray = [];

    function initMap() {
        var myLatLng = { lat: parseFloat($('#lat').val()), lng: parseFloat($('#longt').val()) };        
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 10,
            center: myLatLng
        });


        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map,
            title: 'Set Location!'
        });

        markersArray.push(marker);

        map.addListener('click', function (e) {
            placeMarkerAndPanTo(e.latLng, map);
        });

    }


    function clearOverlays() {
        for (var i = 0; i < markersArray.length; i++) {
            markersArray[i].setMap(null);
        }
        markersArray.length = 0;
    }

    function placeMarkerAndPanTo(latLng, map) {
        clearOverlays();

        var marker = new google.maps.Marker({
            position: latLng,
            map: map
        });
        markersArray.push(marker);
        map.panTo(latLng);
        $('#longt').val(latLng.lng);
        $('#lat').val(latLng.lat);
    }





</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAC6Yyjmk9tLMPEe6ID2rmzwcYPCHKYrZU&callback=initMap">
</script>