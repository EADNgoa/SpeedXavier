@model Speedbird.Package

@using (Html.BeginForm("Manage", "Package", FormMethod.Post,new { id="detFrm"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.Hidden("ServiceTypeID", (int)ViewBag.sid)
    @Html.Hidden("SupContrts")

    if (Model?.PackageID > 0)
    { @Html.HiddenFor(model => model.PackageID) }

<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Name</span></div>
        @Html.EditorFor(model => model.PackageName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PackageName, "", new { @class = "text-danger" })
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Duration</span></div>
        @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Coupon Code</span></div>
        @Html.EditorFor(model => model.CouponCode, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CouponCode, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Difficutly</span></div>
        @Html.EditorFor(model => model.Dificulty, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Dificulty, "", new { @class = "text-danger" })
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Group size</span></div>
        @Html.EditorFor(model => model.GroupSize, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.GroupSize, "", new { @class = "text-danger" })
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Stops at</span></div>
        <select id="GeoTreeID" name="GeoTreeID" class="GeoSelect form-control" multiple="multiple">
           @if (ViewBag.GeoId != null)
           {
               foreach (var o in ViewBag.GeoId)
               {
                <option value="@o.Value" selected="selected">@o.Text</option>
               }
           }
        </select>
    </div>
</div>

<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Start Time (CSV values)</span></div>
        @Html.TextBoxFor(model => model.StartTime, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Highlights</span></div>
        @Html.TextAreaFor(model => model.Highlights, 3, 43, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Highlights, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Description</span></div>
        @Html.TextAreaFor(model => model.Description, 3, 43, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Itinerary</span></div>
        @Html.TextAreaFor(model => model.Itinerary, 3, 43, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Itinerary, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Inclusions</span></div>
        @Html.TextAreaFor(model => model.Inclusion, 3, 43, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Inclusion, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Exclusions</span></div>        
            @Html.TextAreaFor(model => model.Exclusion, 3, 43, htmlAttributes: new { @class = "form-control" })        
            @Html.ValidationMessageFor(model => model.Exclusion, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Meeting Point and Info</span></div>        
            @Html.TextAreaFor(model => model.MeetAndInfo, 3, 43, htmlAttributes: new { @class = "form-control" })        
            @Html.ValidationMessageFor(model => model.MeetAndInfo, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <div class="input-group col-3 mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Supplier</span></div>
        <select id="SupID" name="SupID" class="form-control" data-setu="SupSave" data-geturl="GetSup" multiple="multiple">
            @if (ViewBag.Sups!= null)
            {
                foreach (var o in ViewBag.Sups)
                {
                <option value="@o.Value" selected="selected">@o.Text</option>
                }
            }
        </select>
    </div>
    <div class="input-group col-3 mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Contracts</span></div>
        <span id="ContID" name="ContID" class="form-control">
            @if (ViewBag.SupConts!= null)
            {
                foreach (var item in ViewBag.SupConts)
                {
                    @item
                    @:,
                }
            }
        </span>
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Supplier Notes</span></div>        
            @Html.TextAreaFor(model => model.SupplierNotepad, 3, 43, htmlAttributes: new { @class = "form-control" })        
    </div>
</div>



<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Activities</span></div>
        <select id="ActID" name="ActID" class="form-control sel2Lkup" data-setu="ActSave" data-geturl="GetAct" multiple="multiple">
            @if (ViewBag.Acts!= null)
            {
                foreach (var o in ViewBag.Acts)
                {
                    <option value="@o.Value" selected="selected">@o.Text</option>
                }
            }
        </select>
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Categories</span></div>
        <select id="CatID" name="CatID" class="form-control sel2Lkup" data-setu="CatSave" multiple="multiple">
            @if (ViewBag.Cats!= null)
            {
                foreach (var o in ViewBag.Cats)
                {
                    <option value="@o.Value" selected="selected">@o.Text</option>
                }
            }
        </select>
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Attributes</span></div>
        <select id="AtrID" name="AtrID" class="form-control sel2Lkup" data-setu="AtrSave" data-geturl="GetAtr" multiple="multiple">
            @if (ViewBag.Atrs != null)
            {
                foreach (var o in ViewBag.Atrs)
                {
                <option value="@o.Value" selected="selected">@o.Text</option>
                }
            }
        </select>
    </div>
</div>

<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Languages</span></div>
        <select id="LanID" name="LanID" class="form-control sel2Lkup" data-setu="LanSave" multiple="multiple">
            @if (ViewBag.Lang != null)
            {
                foreach (var o in ViewBag.Lang)
                {
                <option value="@o.Value" selected="selected">@o.Text</option>
                }
            }
        </select>
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Attractions</span></div>
        <select id="AttID" name="AttID" class="form-control sel2Lkup" data-setu="AttSave" multiple="multiple">
            @if (ViewBag.Atts != null)
            {
                foreach (var o in ViewBag.Atts)
                {
                <option value="@o.Value" selected="selected">  @o.Text</option>
                }
            }
        </select>
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Icons</span></div>
        <select id="IcnID" name="IcnID" class="form-control" data-setu="IcnSave" multiple="multiple">            
            @if (ViewBag.Icns != null)
            {
                foreach (var o in ViewBag.Icns)
                {
                <option value="@o.Value" selected="selected">@o.Text</option>
                }
            }
        </select>
    </div>
</div>

}
<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <button id="SaveDetails" class="btn btn-primary">Save</button>
        @*<input type="submit" value="Save" class="btn btn-primary" />*@
    </div>
</div>

<script>
    $(function(){

        //Submit form when the Save button is clicked
        $('#SaveDetails').click(function () {
            $('#SupContrts').val($('#ContID').html());

            var detFrm = $('#detFrm');

            //Save the details form if it exists else just move on.
            if (typeof (detFrm[0]) == 'object') {
                $.ajax({
                    url: detFrm.action,
                    type: 'post',
                    data: $(detFrm).serialize(),
                    success: function () {
                        window.location.assign('@Url.Action("Index", new { sid = (int)ViewBag.sid })');
                    }
                });
            }
        });



        //Icons
        function setupIcons(data) {
            if (!data.id) { return data.text; }
            var $result = $(
                '<span><img height="32px;" src="/Icons/' + data.text +'" /> ' + data.text + '</span>'
            );
            return $result;
        };

        $("#IcnID").select2({
            templateResult: setupIcons,
            templateSelection: setupIcons,

            ajax: {
                url: '@(Url.Action("GetIcn", "Package"))',
                dataType: 'json',
                quietMillis: 250,
                results: function (data, page) {
                    return { results: data.data };
                }
            }
        });

        //Save Icon data
        $("#IcnID").on('change', function (e) {
            $.post('/SBBoss/Package/IcnSave', { PackageId: $('#PackageID').val(), IcnNames: $(this).val(), ServiceTypeId: $('#ServiceTypeID').val() })
        });

        //Activities
        $("#ActID").select2({
            placeholder: "Type 3 letters to choose",
            minimumInputLength: 3,

            ajax: {
                url: '@(Url.Action("GetAct", "Package"))',
                dataType: 'json',
                quietMillis: 250,
                results: function (data, page) {
                    return { results: data.data };
                }
            }
        });


        //Categories
        $("#CatID").select2({
            placeholder: "Type 3 letters to choose",
            minimumInputLength: 3,

            ajax: {
                url: '@(Url.Action("GetCat", "Package"))',
                dataType: 'json',
                quietMillis: 250,
                results: function (data, page) {
                    return { results: data.data };
                    inp
                }
            }
        });

         //Attractions
        $("#AttID").select2({
            placeholder: "Type 3 letters to choose",
            minimumInputLength: 3,

            ajax: {
                url: '@(Url.Action("GetAtt", "Package"))',
                dataType: 'json',
                quietMillis: 250,
                results: function (data, page) {
                    return { results: data.data };
                }
            }
        });

        //Language
        $("#LanID").select2({
            placeholder: "Type 3 letters to choose",
            minimumInputLength: 3,

            ajax: {
                url: '@(Url.Action("GetLan", "Package"))',
                dataType: 'json',
                quietMillis: 250,
                results: function (data, page) {
                    return { results: data.data };
                }
            }
        });

        //Attributes
        $("#AtrID").select2({
            placeholder: "Type 3 letters to choose",
            minimumInputLength: 3,

            ajax: {
                url: '@(Url.Action("GetAtr", "Package"))',
                dataType: 'json',
                quietMillis: 250,
                results: function (data, page) {
                    return { results: data.data };
                }
            }
        });

        //Supplier
        $("#SupID").select2({
            placeholder: "Type 3 letters to choose",
            minimumInputLength: 3,

            ajax: {
                url: '@(Url.Action("GetSup", "Package"))',
                dataType: 'json',
                quietMillis: 250,
                results: function (data, page) {
                    return { results: data.data };
                }
            }
        });

        //Save Select2 data
        $(".sel2Lkup").on('change', function (e) {
            $.post('/SBBoss/Package/' + $(this).data('setu'), { PackageId: $('#PackageID').val(), ActIds: $(this).val() })
        });

        //Save Select2 Supplier Contract data
        $("#SupID").on('select2:select', function (e) {
            var contno = prompt("Please enter the contract number", "");
            var oldConts = $('#ContID').html();
            $('#ContID').html(oldConts + ',' + contno);

            var conts = '';
            $.post('/SBBoss/Package/' + $(this).data('setu'), { PackageId: $('#PackageID').val(), ActIds: $(this).val(), Conts: $('#ContID').html() });

        });

        $("#SupID").on('select2:unselect', function (e) {
            $.post('/SBBoss/Package/KillSup', { PackageId: $('#PackageID').val(), deadSup: e.params.data.id }, function (e) {
                $('#ContID').html(e);
            });

        });

        $("textarea").jqte();
    });

    //GeoSelector
         $(document).ready(function () {
                function formatState(state) {
                    if (!state.id) {
                        return state.text;
                    }
                    var parts = state.text.split(",");
                    return parts[0];

                };



                $(".GeoSelect").select2({
                    placeholder: "Type 3 letters to choose",
                    templateSelection: formatState,

                    ajax: {
                        url: '@(Url.Action("GetLocations", "GeoTree"))',
                        dataType: 'json',
                        quietMillis: 250,
                        results: function (data, page) {
                            return { results: data.data };
                        }
                    }
                });


         });
</script>