@model Speedbird.Package


<div class="card border rounded DropShadow">
    <div class="position-absolute text-center rounded DropShadow" id="EAcardTitle">
        <span class="h3">@ViewBag.Title</span>
        <a href="@Url.Action("Index","Package",new { sid= ViewBag.sid})"><i class="fas fa-undo-alt fa-inverse h3 float-right DropShadow"></i></a>
    </div>
    <div class="card-body">
        <h5>&nbsp;</h5>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.Hidden("ServiceTypeID", (int)ViewBag.sid)

                @if (Model?.PackageID > 0)
                {
                    @Html.HiddenFor(model => model.PackageID)

                    <nav class="navbar navbar-expand-sm bg-light" role="navigation">
                        <a class="navbar-brand" href="#">Details For this @ViewBag.Title: </a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="navbar-toggler-icon"></span>
                        </button>

                        <div class="collapse navbar-collapse" id="navbarSupportedContent">
                            <ul class="navbar-nav mr-auto">
                                <li class="nav-item">
                                    <a class="nav-link" href="~/SBBoss/Package/ActManage/@Model.PackageID">Activity</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="~/SBBoss/Package/AttractManage/@Model.PackageID">Attraction</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="~/SBBoss/Package/CatManage/@Model.PackageID">Category</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="~/SBBoss/Package/GeoTree/@Model.PackageID">Geo Location</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="~/SBBoss/Package/PackPrice/@Model.PackageID">Price</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="~/SBBoss/Package/PackPicture/@Model.PackageID?stid=@Model.ServiceTypeID">Image</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="~/SBBoss/Package/LangManage/@Model.PackageID">Language</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="~/SBBoss/Package/PVManage/@Model.PackageID">Validity</a>
                                </li>
                            </ul>
                        </div>
                    </nav>

                    
                    <hr />
                }

                <div class="form-group">
                    @if (ViewBag.sid == 1)
                    {
                        @Html.LabelFor(model => model.PackageName, "Package Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    }
                    else if (ViewBag.sid == 2)
                    {
                        @Html.LabelFor(model => model.PackageName, "Cruise Name", htmlAttributes: new { @class = "control-label col-md-2" })


                    }
                    else if (ViewBag.sid == 3)
                    {
                        @Html.LabelFor(model => model.PackageName, "SightSeeing", htmlAttributes: new { @class = "control-label col-md-2" })


                    }
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PackageName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PackageName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">Docks at</label>
                    <div class="col-md-10">
                        <select id="GeoTreeID" name="GeoTreeID" style="width:280px;" class="GeoSelect" multiple="multiple">
                            @foreach (var o in ViewBag.GeoId)
                            {
                                <option value="@o.Value" selected="selected">@o.Text</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, 3, 43, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Duration, "Duration (in hrs)", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Itinerary, "Itinerary", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Itinerary, 3, 700, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Itinerary, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @if (ViewBag.sid == 1 || ViewBag.sid == 3)
                    {
                        @Html.LabelFor(model => model.Dificulty, "Difficulty", htmlAttributes: new { @class = "control-label col-md-2" })
                    }
                    else if (ViewBag.sid == 2)
                    {
                        @Html.LabelFor(model => model.PackageName, "Star Rating", htmlAttributes: new { @class = "control-label col-md-2" })

                    }
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Dificulty, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Dificulty, "", new { @class = "text-danger" })
                    </div>
                </div>
                @if (ViewBag.sid == 1 || ViewBag.sid == 3)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.GroupSize, "Group Size (Max people)", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.GroupSize, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.GroupSize, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.GuideLanguageID, "Guide Language", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.GuideLanguageID, null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GuideLanguageID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartTime, "Start Time", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Inclusion, "Inclusions", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Inclusion, 3, 43, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Inclusion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Exclusion, "Exclusions", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Exclusion, 3, 43, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Exclusion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }


    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
