
@model Speedbird.Config
@{
    ViewBag.Title = "Manage Config";
}

<div class="card border rounded DropShadow">
    <div class="position-absolute text-center rounded DropShadow" id="EAcardTitle">
        <span class="h3">@ViewBag.Title</span>
    </div>
    <div class="card-body">


        @using (Html.BeginForm("Manage","Config", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (Model?.ConfigId > 0)
                {
                    @Html.HiddenFor(model => model.ConfigId)
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductId, "ProductId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TransServiceCharge, "TransServiceCharge", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TransServiceCharge, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TransServiceCharge, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.MerchantId, "MerchantId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MerchantId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MerchantId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Pwd, "Password", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Pwd, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Pwd, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" id="insert" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }


    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
