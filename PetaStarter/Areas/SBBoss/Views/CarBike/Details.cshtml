@model Speedbird.CarBike
<style>

    #map {
        height: 350px;
        width: 100%;
    }


</style>

@using (Html.BeginForm("Manage", "CarBike", FormMethod.Post, new { id = "detFrm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    if (Model?.CarBikeID > 0)
    { @Html.HiddenFor(model => model.CarBikeID) }

<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Name</span></div>
        @Html.EditorFor(model => model.CarBikeName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CarBikeName, "", new { @class = "text-danger" })
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">No of Pax</span></div>
        @Html.EditorFor(model => model.NoPax, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.NoPax, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Location</span></div>
        <select id="GeoTreeID" name="GeoTreeID" class="form-control GeoSelect input-group.input-group-lg">
            @foreach (var o in ViewBag.GeoId)
            {
                <option value="@o.Value">@o.Text</option>
            }
        </select>
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Coupon Code</span></div>
        @Html.EditorFor(model => model.CouponCode, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CouponCode, "", new { @class = "text-danger" })
    </div>

</div>
<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">Description</span></div>
        <div class="form-control" style="padding:0px !important">@Html.TextAreaFor(model => model.Description, 3, 43, htmlAttributes: new { @class = "form-control" })</div>
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">No of Small Bags</span></div>
        @Html.EditorFor(model => model.NoSmallBags, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.NoSmallBags, "", new { @class = "text-danger" })
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend"><span class="input-group-text">No of Large Bags</span></div>
        @Html.EditorFor(model => model.NoLargeBags, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.NoLargeBags, "", new { @class = "text-danger" })
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend">
            <div class="input-group-text">
                @Html.EditorFor(model => model.HasAc, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <label class="form-control">Has AC?</label>
    </div>
</div>
if (Model?.CarBikeID > 0)
{
    <div class="form-row">
        <div class="input-group col-3 mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Supplier</span></div>
            <select id="SupID" name="SupID" class="form-control" data-setu="SupSave" data-geturl="GetSup" multiple="multiple">
                @if (ViewBag.Sups != null)
                {
                    foreach (var o in ViewBag.Sups)
                    {
                        <option value="@o.Value" selected="selected">@o.Text</option>
                    }
                }
            </select>
        </div>
        <div class="input-group col-3 mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Contracts</span></div>
            <span id="ContID" name="ContID" class="form-control">
                @if (ViewBag.SupConts != null)
                {
                    foreach (var item in ViewBag.SupConts)
                    {
                        @item
                        @:,
                    }
                }
            </span>
        </div>
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Supplier Notes</span></div>
            <div class="form-control" style="padding:0px !important">
                @Html.TextAreaFor(model => model.SupplierNotepad, 3, 43, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
    </div>

}
<div class="form-row">
    <div class="input-group col mb-3">
        <div class="input-group-prepend">
            <div class="input-group-text">
                @Html.EditorFor(model => model.IsBike, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <label class="form-control">Is Bike?</label>
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend">
            <div class="input-group-text">
                @Html.EditorFor(model => model.HasCarrier, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <label class="form-control">Has Carrier?</label>
    </div>
    <div class="input-group col mb-3">
        <div class="input-group-prepend">
            <div class="input-group-text">
                @Html.EditorFor(model => model.InclHelmet, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <label class="form-control">Includes Helmet?</label>
    </div>

</div>

}
<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <button id="SaveDetails" class="btn btn-primary">Save</button>
    </div>
</div>


<script>

        $(document).ready(function () {
                    
        //Submit form
        $('#SaveDetails').click(function () {
            var detFrm = $('#detFrm');

            //Save the details form if it exists else just move on.
            if (typeof (detFrm[0]) == 'object') {
                $.ajax({
                    url: detFrm.action,
                    type: 'post',
                    data: $(detFrm).serialize(),
                    success: function () {
                        window.location.assign('@Url.Action("Index")');
                    }
                });
            }
        });


            function formatState(state) {
                if (!state.id) {
                    return state.text;
                }
                var parts = state.text.split(",");
                return parts[0];

            };

             //Supplier
        $("#SupID").select2({
            placeholder: "Type 3 letters to choose",
            minimumInputLength: 3,
            theme: "bootstrap",

            ajax: {
                url: '@(Url.Action("GetSup", "Package"))',
                dataType: 'json',
                quietMillis: 250,
                results: function (data, page) {
                    return { results: data.data };
                }
            }
        });



        //Save Select2 Supplier Contract data
        $("#SupID").on('select2:select', function (e) {
            var contno = prompt("Please enter the contract number", "");
            var oldConts = $('#ContID').html();
            $('#ContID').html(oldConts + ',' + contno);

            var conts = '';
            $.post('/SBBoss/CarBike/' + $(this).data('setu'), { PackageId: $('#CarBikeID').val(), ActIds: $(this).val(), Conts: $('#ContID').html() });

        });

        $("#SupID").on('select2:unselect', function (e) {
            $.post('/SBBoss/CarBike/KillSup', { CarBikeID: $('#CarBikeID').val(), deadSup: e.params.data.id }, function (e) {
                $('#ContID').html(e);
            });

        });

            //GeoSelector
            $(".GeoSelect").select2({
                placeholder: "Type 3 letters to choose",
                templateSelection: formatState,
                theme: "bootstrap",
                ajax: {
                    url: '@(Url.Action("GetLocations", "GeoTree"))',
                    dataType: 'json',
                    quietMillis: 250,
                    results: function (data, page) {
                        return { results: data.data };
                    }
                }
            });

            $("textarea").jqte();


        });


</script>
