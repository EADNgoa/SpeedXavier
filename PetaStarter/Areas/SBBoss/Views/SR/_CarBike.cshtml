@model Speedbird.SRdetail
<fieldset @ViewBag.IsReadOnly>
    <div class="form-row">
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Drop Off Address</span></div>
            @Html.EditorFor(model => model.ToLoc, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ToLoc, "", new { @class = "text-danger" })
        </div>
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">To Date</span></div>
            @Html.EditorFor(model => model.Tdate, new { htmlAttributes = new { @type = "text", @class = "eadate form-control" } })
            @Html.ValidationMessageFor(model => model.Tdate, "", new { @class = "text-danger" })

        </div>
        
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Car/Bike Name</span></div>
            <input type="text" id="CarBikeName" name="CarBikeName" style="color:black;" data-autocomplete-idholder="#ItemID" value="" data-autocombo-url="@Url.Action("AutoCompleteCar")" class="form-control" />
            @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })
        </div>
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Type</span></div>
            @Html.DropDownList("CarType", null, htmlAttributes: new { @type = "text", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ToLoc, "", new { @class = "text-danger" })
        </div>

    </div>
    <div class="form-row">
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Model</span></div>
            @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })

        </div>
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">License No</span></div>
            @Html.EditorFor(model => model.PNRno, new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.PNRno, "", new { @class = "text-danger" })

        </div>
        <div class="input-group col mb-3">
            @if (ViewBag.isReadOnly != null)
            {
                <div class="bg-secondary px-2 text-light">
                    @Html.Label((Model.HasAc) ? "Includes Air Conditioning" : "No A/C")
                </div>
            }
            else
            {
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        @Html.CheckBoxFor(model => model.HasAc, new { htmlAttributes = new { @type = "text", @class = "form-control" } }) 
                    </div>
                </div>
                <label class="form-control">Has AC?</label>
            }
        </div>
        <div class="input-group col mb-3">
            @if (ViewBag.isReadOnly != null)
            {
                <div class="bg-secondary px-2 text-light">
                    @Html.Label((Model.HasCarrier) ? "Includes Carrier" : "No Carrier")
                </div>
            }
            else
            {
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        @Html.CheckBoxFor(model => model.HasCarrier, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <label class="form-control">Has Carrier?</label>
            }
        </div>
        
    </div>
</fieldset>
@if (ViewBag.isReadOnly != null)
{@Html.Action("CustSearch", "SR", new { id = Model.SRDID })
}
<script>
    $(function () {
        //DateTime picker
        $('input[type=date]').datetimepicker({
            dateFormat: "dd-MM-yy",
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true,
            timeFormat: "HH:mm"

        }).attr('type', 'text').attr('autocomplete', 'off');

        //Disable the browsers default date picker
        $('input[type=time]').timepicker({
            showButtonPanel: true,
            timeFormat: "HH:mm"

        }).attr('type', 'text').attr('autocomplete', 'off');

        //Disable the browsers default date picker
        jQuery.validator.methods["date"] = function (value, element) { return true; }

    });

    $(document).ready(function () {
        $('.eadate').datepicker({
            dateFormat: "dd-MM-yy",
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true
        });

        $('*[data-autocombo-url]')
            .each(function () {
                $(this).autocomplete({
                    source: $(this).data("autocombo-url"),
                    minLenght: 3,
                    delay: 500,
                    select: function (event, ui) {
                        $($(this).data("autocomplete-idholder")).val(ui.item.id);
                    }
                });
            });
    });

</script>