@using Speedbird
@model Speedbird.SRdetail

@{ Html.RenderPartial("WritePVs/_CommonHidden", Model); }

<table class="SRDetsTbl" width="100%">
    <thead>
        <tr>
            <th>Pax Name      </th>
            <th>Tour Name     </th>
            <th>Adult Qty     </th>
            <th>Child Qty     </th>
            <th>Half/ Full day</th>
            <th>Pick From     </th>
            <th>Picup Loc     </th>
            <th>Pickup Time   </th>
            <th>Pvt/Sic     </th>
            <th>Tour Date     </th>
            <th>Cost Per Car  </th>
            <th>Adult Sic Cost</th>
            <th>Child Sic Cost</th>
            <th>Vehicle Type  </th>
            <th>Cars Qty      </th>
            <th>Meal Incl.    </th>
            <th>Pay To</th>
            <th>Sell Price    </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>  @Html.EASelectListP("CustomerId", (IEnumerable<SelectListItem>)ViewBag.CustomerList, "", "Pax Name", (string)ViewBag.SelectedCustomerId)</td>
            <td>  @Html.EATextForP(m => m.Model, "Pkg. Name")                                                                                             </td>
            <td>  @Html.EANumberForP(m => m.AdultNo, "No. of Adults")                                                                                     </td>
            <td>  @Html.EANumberForP(m => m.ChildNo, "No. of Children")                                                                                   </td>
            <td>  @Html.EASelectListForP(m => m.OptionTypeID, "Half/Full day")                                                                            </td>
            <td>  @Html.EATextForP(m => m.PickUpPoint, "Pickup From")                                                                                     </td>
            <td>  @Html.EATextForP(m => m.FromLoc, "Pickup Location")                                                                                     </td>
            <td>  @Html.EADateTimeForP(m => m.Tdate, "Private/Sic")</td>
            <td>  @Html.EASelectListForP(m => m.Heritage, "Private/Sic")                                                                                  </td>
            <td>  @Html.EADateTimeForP(m => m.Fdate, "Tour Date")                                                                                         </td>
            <td>  @Html.EANumberForP(m => m.DinnerCost, "Cost per car")                                                                                         </td>
            <td>  @Html.EANumberForP(m => m.BFCost, "Adult sic Cost")                                                                                     </td>
            <td>  @Html.EANumberForP(m => m.LunchCost, "Child sic Cost")                                                                                  </td>
            <td>  @Html.EASelectListForP(m => m.CarType, "Vehicle Type")                                                                                  </td>
            <td>  @Html.EANumberForP(m => m.Qty, "No. of cars")                                                                                           </td>
            <td>  @Html.EAChkBoxP("HasAc", "", "Meal Included")                                                                                           </td>
            <td> @Html.EASelectListForP(m => m.PayTo)</td>
            <td>  @Html.EANumberForP(m => m.SellPrice)</td>
        </tr>
    </tbody>
</table>
<table class="SRDetsTbl" width="100%">
    <thead>
        <tr>
            <th>Driver  </th>
            <th>Car  </th>
            <th>Inv No.    </th>
            <th>Inv. Dt.   </th>
            <th>Inv. Amt   </th>
            <th>Coupon Code</th>
            <th>Confirm NO </th>
            <th>Contract No</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@Html.EAAutocompleteForP(m => m.DriverID, "SR", "AutoCompleteDriver", "Driver", (string)ViewBag.Driver)                                   </td>
            <td>@Html.EASelectListP("NoExtraBeds", new List<SelectListItem> { new SelectListItem { Text = "1st choose Driver", Value = "0" } }, "", "Car") </td>
            <td>@Html.EATextForP(m => m.SuppInvNo)                                                                                                        </td>
            <td>@Html.EADateForP(m => m.SuppInvDt)                                                                                                        </td>
            <td>@Html.EATextForP(m => m.SuppInvAmt)                                                                                                       </td>
            <td>@Html.EATextForP(m => m.CouponCode)                                                                                                       </td>
            <td>@Html.EATextForP(m => m.SuppConfNo)                                                                                                       </td>
            <td>@Html.EATextForP(m => m.ContractNo)                                                                                                       </td>
        </tr>
    </tbody>
</table>

@*@{ Html.RenderPartial("WritePVs/_SupplierInfo", Model); }*@



<script>
    $(function () {
        //DateTime picker
        $('.eadatetime').datetimepicker({
            dateFormat: "dd-MM-yy",
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true,
            timeFormat: "HH:mm:ss tt",
            yearRange: "-100:+10"
        });

        $('.eadate').datepicker({
            dateFormat: "dd-MM-yy",
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+10"
        });

     //Disable the browsers default date picker
            jQuery.validator.methods["date"] = function (value, element) { return true; }

            function setDriverCars(driverid) {
                $.get('@Url.Action("AutoCompleteCars")', { DriverId: driverid }, function (response) {

                    $('#NoExtraBeds').html('');

                    if (response.length > 0) {
                        var options = '';
                        for (var i = 0; i < response.length; i++) {
                            if (response[i].id == @(Model?.NoExtraBeds ??-1)) {
                                options += '<option selected value="' + response[i].id + '">' + response[i].value + '</option>';
                            } else {
                                options += '<option value="' + response[i].id + '">' + response[i].value + '</option>';
                            }
                        }
                    }
                        options += '<option value="Select">No Cars defined</option>';
                        $('#NoExtraBeds').append(options);
                });
            }

            //If in edit mode we may already have the driverid and thus should fetch his cars
            if ($("#DriverID").val() > 0) {
                setDriverCars($("#DriverID").val());
            }

            //fetch driver cars on selection of driver
            $("#DriverID").on("change", function () {
                setDriverCars($(this).val());
            });


    });


    $(document).ready(function () {
        $('*[data-autocombo-url]')
            .each(function () {
                $(this).autocomplete({
                    source: $(this).data("autocombo-url"),
                    minLenght: 3,
                    delay: 500,
                    select: function (event, ui) {
                        $("#" + $(this).data("autocomplete-idholder")).val(ui.item.id).trigger('change');
                    }
                });
            });
    });

</script>
