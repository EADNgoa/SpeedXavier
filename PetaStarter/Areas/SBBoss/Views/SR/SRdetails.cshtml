@model Speedbird.SRdetail

@{
    ViewBag.Title = $"Manage Services";
}

<style>
    /*for Datatables*/
    td.details-control {
        background: url('/Content/DataTables/DataTables-1.10.16/images/details_open.png') no-repeat center center;
        cursor: pointer;
    }

    tr.shown td.details-control {
        background: url('/Content/DataTables/DataTables-1.10.16/images/details_close.png') no-repeat center center;
    }
    /*End for Datatables*/
</style>




<div class="position-absolute text-center rounded DropShadow" id="EAcardTitle">
    <span class="h3">@ViewBag.Title</span>
    <a href="@Url.Action("Index","SR",new { sid= ViewBag.sid})"><i class="fas fa-undo-alt fa-inverse h3 float-right DropShadow"></i></a>
</div>

@Html.Action("GetSRInfo", "SR", new { id = ViewBag.SRID, mode = ViewBag.mode })

<div class="section-to-Not-print">
    @if (Model?.SRDID > 0)
    {
        <div class="row">
            <div class="col">
                <center>
                    <button type="button" class="btn btn-link btn-lg" data-toggle="modal" data-target="#AssignCustModal" data-srdid="@Model.SRDID">
                        Add Customer
                    </button>
                </center>

            </div>

        </div>
    }

    <br />
    @using (Html.BeginForm("SRdetails", "SR", FormMethod.Post,new {id="ServiceDets" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal ">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.Hidden("SRID", (int)ViewBag.SRID)
        @Html.HiddenFor(model => model.SupplierID)
        @Html.HiddenFor(model => model.ItemID)

        @if (Model?.SRDID != null)
        {@Html.Hidden("SRDID", (int)Model.SRDID)}


        <div class="form-row">
            <div class="input-group col mb-3">
                <div class="input-group-prepend"><span class="input-group-text">Notes</span></div>
                <div class="form-control" style="padding:0px !important">@Html.TextArea("Event", null, htmlAttributes: new { @class = "form-control" })</div>
            </div>
        </div>
        <div class="form-row">
            <div class="input-group col mb-3">
                <div class="input-group-prepend"><span class="input-group-text">Service Type</span></div>
                @Html.DropDownListFor(model => model.ServiceTypeID, null, htmlAttributes: new { @type = "text", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceTypeID, "", new { @class = "text-danger" })
            </div>
            <div class="input-group col mb-3">
                <div class="input-group-prepend"><span class="input-group-text">Quantity</span></div>
                @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @type = "text", @class = " form-control" } })
                @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
            </div>
            <div class="input-group col mb-3">
                <div class="input-group-prepend"><span class="input-group-text">Coupon Code</span></div>
                @Html.EditorFor(model => model.CouponCode, new { htmlAttributes = new { @type = "text", @class = " form-control" } })
                @Html.ValidationMessageFor(model => model.CouponCode, "", new { @class = "text-danger" })
            </div>            
            <div class="input-group col mb-3">
                <div class="input-group-prepend"><span class="input-group-text">Option Type</span></div>
                @Html.DropDownListFor(model => model.OptionTypeID, null, htmlAttributes: new { @type = "text", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OptionTypeID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-row">
            <div class="input-group col mb-3">
                <div class="input-group-prepend"><span class="input-group-text">Supplier</span></div>
                <input type="text" id="SupplierName" name="SupplierName" style="color:black;" data-autocomplete-idholder="#SupplierID" value="" data-autocombo-url="@Url.Action("AutoCompleteSup")" class="form-control" />
                @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
            </div>
            <div class="input-group col mb-3">
                <div class="input-group-prepend"><span class="input-group-text">Contract No</span></div>
                @Html.EditorFor(model => model.ContractNo, new { htmlAttributes = new { @type = "text", @class = " form-control" } })
                @Html.ValidationMessageFor(model => model.ContractNo, "", new { @class = "text-danger" })
            </div>
            <div class="input-group col mb-3">
                <div class="input-group-prepend"><span class="input-group-text"> Invoice No</span></div>
                @Html.EditorFor(model => model.SuppInvNo, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SuppInvNo, "", new { @class = "text-danger" })
            </div>
            <div class="input-group col mb-3">
                <div class="input-group-prepend"><span class="input-group-text">Cost Price</span></div>
                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @type = "text", @class = " form-control" } })
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
            </div>


        </div>
        <div class="form-row">           
            <div class="input-group col mb-3">
                <div class="input-group-prepend"><span class="input-group-text">Sell Price</span></div>
                @Html.EditorFor(model => model.SellPrice, new { htmlAttributes = new { @type = "text", @class = " form-control" } })
                @Html.ValidationMessageFor(model => model.SellPrice, "", new { @class = "text-danger" })
            </div>           
            <div class="input-group col mb-3">
                <div class="input-group-prepend">@Html.LabelFor(model => model.Fdate, new { @class = "input-group-text", @id = @Html.IdFor(m => m.Fdate) + "_lbl" })</div>
                @Html.EditorFor(model => model.Fdate, new { htmlAttributes = new { @type = "text", @class = "eadate form-control" } })
                @Html.ValidationMessageFor(model => model.Fdate, "", new { @class = "text-danger" })
            </div>
            <div class="input-group col mb-3">
                <div class="input-group-prepend">@Html.LabelFor(model => model.FromLoc, new { @class = "input-group-text", @id = @Html.IdFor(m => m.FromLoc) + "_lbl" })</div>
                @Html.EditorFor(model => model.FromLoc, new { htmlAttributes = new { @type = "text", @class = "form-control LenRestrict", data_mlen = 2 } })
                @Html.ValidationMessageFor(model => model.FromLoc, "", new { @class = "text-danger" })
            </div>


        </div>


        @*Dynamic Form-rows based on Selected Service Type*@
        <div id="placeholderEditDiv"></div>
        @*Dynamic Form-rows based on Selected Service Type*@

        <div class="form-row">


            <div class="input-group col mb-3">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
    }
</div>
<br />

<hr />
<table id="SRDetTbl" class="table table-sm table-striped">
    <thead class="thead-light">
        <tr role="row">
            <th>Dets</th>
            <th></th>
            <th><input type="date" class="form-control" placeholder="Filter Date"></th>

            <th><input type="text" class="form-control" placeholder="Filter Supplier"></th>
            <th><input type="text" class="form-control" placeholder="Filter Contract No"></th>
            <th><input type="text" class="form-control" placeholder="Filter Coupon Code"></th>

            <th><input type="text" class="form-control" placeholder="Filter Cost Price"></th>
            <th><input type="text" class="form-control" placeholder="Filter Sell Price"></th>
            <th width="5%"></th>
        </tr>
        <tr role="row">
            <th></th>
            <th scope="col"> Service Type</th>
            <th scope="col"> Date</th>

            <th scope="col">Supplier</th>
            <th scope="col">Contract No</th>
            <th scope="col">Coupon Code</th>
            <th scope="col">Cost Price</th>
            <th scope="col">Sell Price</th>
            <th width="5%"></th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<div class="invisible">
    <div id="placeholderDiv"></div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript" src="~/Content/DataTables/datatables.min.js"></script>
    <script type="text/javascript" src="~/Scripts/Jquery.form.js"></script>

@if (Model?.SRDID > 0)
{
    <script>
    $('#AssignCust').load('@Url.Action("_AssignCust")', { SRDID: @Model.SRDID,SRID:@Model.SRID });

    </script>
}
    <script>

        $('.eadatetime').datetimepicker({
            dateFormat: "dd-MM-yy",
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true,
            timeFormat: "hh:mm"

        });
        $('.eadate').datepicker({
            dateFormat: "dd-MM-yy",
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true,


        });

    $(function () {

        var setDynLabels = function (sid) {

            //Set the labels of the common form fields based on the selected Service Type
            $.post('@Url.Action("FetchSTlabels", "SR")', { CommonLabel: '@Html.DisplayNameFor(model => model.FromLoc)', ServiceTypeId: sid }, function (data) {
                $('#@Html.DisplayNameFor(model =>model.FromLoc)' + '_lbl').html(data);
            });

            $.post('@Url.Action("FetchSTlabels", "SR")', { CommonLabel: '@Html.DisplayNameFor(model => model.Fdate)', ServiceTypeId: sid }, function (data) {
                $('#@Html.DisplayNameFor(model =>model.Fdate)' + '_lbl').html(data);
            });

        };

        //Load the dynamic fields based on first Service type automatically
        $('#placeholderEditDiv').load('@Url.Action("FetchSTpartial", "SR")', { ServiceTypeId: $('#ServiceTypeID').val(),id:$('#SRDID').val() ,IsReadOnly: false }, setDynLabels($('#ServiceTypeID').val()));

        //Then on change of the dropDown load the dynamic fields based on the selected Service type
        $('#ServiceTypeID').on('change', function () {
            var sid = $(this).val();


            //Load the Dynamic Fields of the Form based on the selected Service Type
            $('#placeholderEditDiv').load('@Url.Action("FetchSTpartial", "SR")', { ServiceTypeId: sid, id: $('#SRDID').val() , IsReadOnly: false });
            setDynLabels(sid);
        });

        //DateTime picker
      
        //Disable the browsers default date picker
        jQuery.validator.methods["date"] = function (value, element) { return true; }


        $(document).ready(function () {
            $('*[data-autocombo-url]')
                .each(function () {
                    $(this).autocomplete({
                        source: $(this).data("autocombo-url"),
                        minLenght: 3,
                        delay: 500,
                        select: function (event, ui) {
                            $($(this).data("autocomplete-idholder")).val(ui.item.id);
                        }
                    });
                });
        });





         var oTable = $('#SRDetTbl').DataTable({
            serverSide: true,
            searching: true,
            "dom": 'lrtip',
            ajax: {
                "type": "POST",
                "url": '@Url.Action("GetSRDetList/"+ViewBag.SRID)',
                "contentType": 'application/json; charset=utf-8',
                'data': function (data) {
                    return data = JSON.stringify(data);
                }
            },
            processing: true,
            deferRender: true,
            columns: [
                {
                    "className": 'details-control',
                    "orderable": false,
                    "data": null,
                    "defaultContent": ''
                },

                { data: "ServiceTypeName" },
                { data: "fstr" },

                { data: "SupplierName" },
                { data: "ContractNo" },
                { data: "CouponCode" },


                { data: "Cost" },
                { data: "SellPrice" },
            ],
            columnDefs: [{
                'targets': 8,
                'searchable': false,
                'orderable': false,
                'bSortable': false,
                'render': function (data, type, full, meta) {
                    return '<button type="button" class="btn btn-link " data-toggle="modal" data-target="#ACModal" data-srdid=' + full.SRDID + '><i class="fas fa-user fa-inverse float-left DropShadow"></i></button><a href = "/SBBoss/SR/Manage?id='+ full.SRID +'&&mode='+3+'&&EID='+full.SRDID+'"><i class="fas fa-edit fa-inverse DropShadow"></i></a> ';
                }
            },
            {
                targets: 'no-sort',
                orderable: true
            }]
        });



        $("#SRDetTbl thead th input[type=text]").on('change', function () {
            oTable.column($(this).parent().index() + ':visible')
                .search(this.value)
                .draw();
        });


        // Add event listener for opening and closing details
        $('#SRDetTbl tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = oTable.row(tr);

            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');
            }
            else {

                // Open this row
                $('#placeholderDiv').load('@Url.Action("FetchSTpartial", "SR")', { id: row.data().SRDID, ServiceTypeId: row.data().ServiceTypeID, IsReadOnly: true }, function () {
                    row.child($('#placeholderDiv').html()).show();
                    $('#placeholderDiv').html();
                    tr.addClass('shown');
                });

            }
        });

        

        $('#ACModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            var recipient = button.data('srdid') // Extract info from data-* attributes          
            $('#AssignCust').load('@Url.Action("_AssignCust")', { SRDID: recipient, SRID: @ViewBag.SRID });
            var modal = $(this)
            modal.find('#SRDID').val(recipient);
            modal.find('#CID').focus();
        })
    })



    </script>