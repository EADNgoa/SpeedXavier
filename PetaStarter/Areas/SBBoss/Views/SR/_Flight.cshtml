@model Speedbird.SRdetail
<style>
    input[type="checkbox"] {
        width: 20px; /*Desired width*/
        height: 20px; /*Desired height*/
    }
</style>
<fieldset @ViewBag.IsReadOnly>
    @Html.Hidden("ParentID")

    <div class="form-row">
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Destination Airport</span></div>
            @Html.EditorFor(model => model.ToLoc, new { htmlAttributes = new { @type = "text", @class = "form-control LenRestrict", data_mlen = 2 } })
            @Html.ValidationMessageFor(model => model.ToLoc, "", new { @class = "text-danger" })
        </div>
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">PNR No</span></div>
            @Html.EditorFor(model => model.PNRno, new { htmlAttributes = new { @type = "text", @class = "form-control LenRestrict", data_mlen = 5 } })
            @Html.ValidationMessageFor(model => model.PNRno, "", new { @class = "text-danger" })

        </div>
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Ticket No</span></div>
            @Html.EditorFor(model => model.TicketNo, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TicketNo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-row">
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Adult No</span></div>
            @Html.EditorFor(model => model.AdultNo, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AdultNo, "", new { @class = "text-danger" })

        </div>
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Child No</span></div>
            @Html.EditorFor(model => model.ChildNo, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ChildNo, "", new { @class = "text-danger" })

        </div>
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Infant No</span></div>
            @Html.EditorFor(model => model.infantNo, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.infantNo, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-row">
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Flight No</span></div>
            @Html.EditorFor(model => model.FlightNo, new { htmlAttributes = new { @type = "text", @class = "form-control LenRestrict", data_mlen = 4 } })
            @Html.ValidationMessageFor(model => model.FlightNo, "", new { @class = "text-danger" })
        </div>
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Airline</span></div>
            @Html.EditorFor(model => model.Airline, new { htmlAttributes = new { @type = "text", @class = "form-control LenRestrict", data_mlen = 2 } })
            @Html.ValidationMessageFor(model => model.Airline, "", new { @class = "text-danger" })
        </div>
        
        <div class="input-group col mb-3">
            <div class="input-group-prepend">
                <div class="input-group-text">
                    @Html.CheckBoxFor(model => model.HasCarrier, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                </div>
            </div>
            <label class="form-control">Check in buggage?</label>
        </div>


    </div>
    <div class="form-row">
        <div class="input-group col mb-3">
            <div class="input-group-prepend">
                <div class="input-group-text">
                    @Html.CheckBoxFor(model => model.HasAc, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                </div>
            </div>
            <label class="form-control">Meal Included?</label>
        </div>

        <div class="input-group col mb-3">
            <div class="input-group-prepend">
                <div class="input-group-text">
                    @Html.EditorFor(model => model.IsReturn)
                </div>
            </div>
            <label class="form-control">Is Return?</label>
        </div>


        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Return Date</span></div>
            @Html.EditorFor(model => model.Tdate, new { htmlAttributes = new { @type = "text", @class = "eadatetime form-control" } })
            @Html.ValidationMessageFor(model => model.Tdate, "", new { @class = "text-danger" })

        </div>

    </div>
</fieldset>
@if (ViewBag.isReadOnly != null)
{@Html.Action("CustSearch", "SR", new { id = Model.SRDID })
}
<script>
    $('#Tdate').prop("disabled", true);

    $('#IsReturn').on('change', function () {        
        $('#Tdate').prop("disabled", $('#IsReturn').is(":not(:checked)") );
            
    });



</script>

<script>

    $('.LenRestrict').on('keydown', function (el) {

        if ($(this).val().length > $(this).data('mlen') && e.keyCode !== 46 && e.keyCode !== 8 && e.keyCode !== 9 ) {
            el.preventDefault();
        }
    });
    
    $('.eadatetime').datetimepicker({
        dateFormat: "dd-MM-yy",
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        timeFormat: "hh:mm"

    });
    $('.eadate').datepicker({
        dateFormat: "dd-MM-yy",
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,


    });

    //Disable the browsers default date picker
    jQuery.validator.methods["date"] = function (value, element) { return true; }





</script>