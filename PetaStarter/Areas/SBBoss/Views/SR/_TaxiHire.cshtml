@model Speedbird.SRdetail
<fieldset @ViewBag.IsReadOnly>
    <div class="form-row">
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">To Location</span></div>
            @Html.EditorFor(model => model.ToLoc, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ToLoc, "", new { @class = "text-danger" })
        </div>
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Pick Up Point</span></div>
            @Html.EditorFor(model => model.PickUpPoint, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PickUpPoint, "", new { @class = "text-danger" })

        </div>
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Drop Point</span></div>
            @Html.EditorFor(model => model.DropPoint, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DropPoint, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-row">
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Taxi Type</span></div>
            @Html.DropDownList("CarType", null, htmlAttributes: new { @type = "text", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CarType, "", new { @class = "text-danger" })
        </div>
        <div class="input-group col mb-3">
            <div class="input-group-prepend"><span class="input-group-text">Model</span></div>
            @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
        </div>
        
        <div class="input-group col mb-3">
          @if (ViewBag.isReadOnly != null)
          {
            <div class="bg-secondary px-2 text-light">
                @Html.Label((Model.HasAc) ? "Includes Air Conditioning" : "No A/C") 
            </div>
          }
          else
          {
            <div class="input-group-prepend">
                <div class="input-group-text">
                    @Html.CheckBoxFor(model => model.HasAc, new { htmlAttributes = new { @type = "text", @class = "form-control" } }) 
                </div>
            </div>
            <label class="form-control">Has AC?</label>
          }
        </div>
    </div>
    <div class="form-row">
        <div class="input-group col mb-3">
            @if (ViewBag.isReadOnly != null)
            {
                <div class="bg-secondary px-2 text-light">
                    @Html.Label((Model.HasCarrier) ? "Includes Carrier" : "No Carrier")
                </div>
            }
            else
            {
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        @Html.CheckBoxFor(model => model.HasCarrier, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <label class="form-control">Has Carrier?</label>
            }
        </div>
        <div class="input-group col mb-3">
                <div class="input-group-prepend"><span class="input-group-text">Pay To</span></div>
                @Html.DropDownListFor(model => model.PayTo, null, htmlAttributes: new { @type = "text", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PayTo, "", new { @class = "text-danger" })
        </div>
        <div class="input-group col mb-3">
                <div class="input-group-prepend"><span class="input-group-text">Rate Basis</span></div>
                @Html.DropDownListFor(model => model.RateBasis, null, htmlAttributes: new { @type = "text", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RateBasis, "", new { @class = "text-danger" })
        </div>
    </div>
    
    
    <div  class="form-row">
        <div class="input-group col mb-3">

            @if (Model?.SRDID > 0)
            {
                <div class="input-group col-3 mb-3">

                    @if (ViewBag.IsReadOnly == null)
                    {
                        <button type="button" class="btn btn-info" data-toggle="modal" data-target="#AssignDriverModal" data-srdid="@Model.SRDID">
                            @if (Model?.DriverID == null)
                            {
                                @:  Assign Driver
                            }
                            else
                            {
                                @: Change Driver
                            }

                        </button>
                        <div class="input-group-prepend"><span class="input-group-text" style="color:blue">@ViewBag.DrvNm</span></div>

                    }
                    else
                    {
                        <div class="input-group-prepend"><span class="input-group-text">Driver Name</span></div>
                        <input type="text" value="@ViewBag.DrvNm" class="form-control" />
                    }



                </div>
            }

            @if (ViewBag.IsReadOnly == null)
            {
                if (Model?.DriverID > 0)
                {
                    <div class="input-group col mb-3">
                        <button type="button" class="btn btn-info" data-toggle="modal" data-target="#DrvReviewModal" data-srdid="@Model.SRDID">
                            Feedback
                        </button>
                    </div>

                }
            }
        </div>
    </div>

</fieldset>


@if (ViewBag.isReadOnly != null)
{@Html.Action("CustSearch", "SR", new { id = Model.SRDID })
}

@if (Model!=null)
{
    <script>
           $('#AssignDriver').load('@Url.Action("_AssignDriver")', { SRID: @Model.SRID, SRDID: @Model.SRDID});
           $('#Review').load('@Url.Action("_DrvReview")', { SRID: @Model.SRID,SRDID: @Model.SRDID});
    </script>
}


<script>



    $(function () {
        //DateTime picker
        $('input[type=date]').datetimepicker({
            dateFormat: "dd-MM-yy",
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true,
            timeFormat: "HH:mm"

        }).attr('type', 'text').attr('autocomplete', 'off');

        $('.eadate').datepicker({
            dateFormat: "dd-MM-yy",
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true
        });

        //Disable the browsers default date picker
        jQuery.validator.methods["date"] = function (value, element) { return true; }

    });



</script>